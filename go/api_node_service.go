// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Flow Learning - OpenAPI 3.1
 *
 * api for flow learning
 *
 * API version: 1.0.0
 * Contact: floTeam@gmail.com
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// NodeAPIService is a service that implements the logic for the NodeAPIServicer
// This service should implement the business logic for every endpoint for the NodeAPI API.
// Include any external packages or services that will be required by this service.
type NodeAPIService struct {
}

// NewNodeAPIService creates a default api service
func NewNodeAPIService() *NodeAPIService {
	return &NodeAPIService{}
}

// GetNode - get wiki node
func (s *NodeAPIService) GetNode(ctx context.Context, nodeId string, tid string) (ImplResponse, error) {
	// TODO - update GetNode with the required logic for this service method.
	// Add api_node_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AddTopic200ResponseNodeData{}) or use other options such as http.Ok ...
	// return Response(200, AddTopic200ResponseNodeData{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetNode method not implemented")
}

// UpdateNode - Update an node
func (s *NodeAPIService) UpdateNode(ctx context.Context, updateNodeRequest UpdateNodeRequest) (ImplResponse, error) {
	// TODO - update UpdateNode with the required logic for this service method.
	// Add api_node_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	// return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateNode method not implemented")
}

// AddNode - Add a new node
func (s *NodeAPIService) AddNode(ctx context.Context, addTopic200ResponseNodeData AddTopic200ResponseNodeData) (ImplResponse, error) {
	// TODO - update AddNode with the required logic for this service method.
	// Add api_node_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AddNode200Response{}) or use other options such as http.Ok ...
	// return Response(200, AddNode200Response{}), nil

	// TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	// return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddNode method not implemented")
}

// DeleteNode - Delete a node
func (s *NodeAPIService) DeleteNode(ctx context.Context, nodeId string, tid string) (ImplResponse, error) {
	// TODO - update DeleteNode with the required logic for this service method.
	// Add api_node_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	// return Response(403, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteNode method not implemented")
}
