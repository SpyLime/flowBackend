// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Flow Learning - OpenAPI 3.1
 *
 * api for flow learning
 *
 * API version: 1.0.0
 * Contact: floTeam@gmail.com
 */

package openapi




type MapData struct {

	Nodes []GetMapById200ResponseNodesInner `json:"nodes"`

	Edges []GetMapById200ResponseEdgesInner `json:"edges"`
}

// AssertMapDataRequired checks if the required fields are not zero-ed
func AssertMapDataRequired(obj MapData) error {
	elements := map[string]interface{}{
		"nodes": obj.Nodes,
		"edges": obj.Edges,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Nodes {
		if err := AssertGetMapById200ResponseNodesInnerRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Edges {
		if err := AssertGetMapById200ResponseEdgesInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertMapDataConstraints checks if the values respects the defined constraints
func AssertMapDataConstraints(obj MapData) error {
	for _, el := range obj.Nodes {
		if err := AssertGetMapById200ResponseNodesInnerConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Edges {
		if err := AssertGetMapById200ResponseEdgesInnerConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
